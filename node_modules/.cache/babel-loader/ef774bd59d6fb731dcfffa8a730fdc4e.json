{"ast":null,"code":"var _jsxFileName = \"/home/carol/Projetos/sd-024-b-project-trivia-react-redux/src/pages/Feedback.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Feedback extends React.Component {\n  render() {\n    const {\n      assertions\n    } = this.props;\n    const acertos = 3;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"feedback-text\",\n        children: assertions >= acertos ? 'Well Done!' : 'Could be better...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: assertions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  assertions: state.player.assertions\n});\n\nFeedback.propTypes = {\n  assertions: PropTypes.number\n}.isRequired;\nexport default connect(mapStateToProps)(Feedback);","map":{"version":3,"names":["React","connect","PropTypes","Header","Feedback","Component","render","assertions","props","acertos","mapStateToProps","state","player","propTypes","number","isRequired"],"sources":["/home/carol/Projetos/sd-024-b-project-trivia-react-redux/src/pages/Feedback.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\n\nclass Feedback extends React.Component {\n  render() {\n    const { assertions } = this.props;\n    const acertos = 3;\n    return (\n      <section>\n        <Header />\n        <p data-testid=\"feedback-text\">\n          { assertions >= acertos ? 'Well Done!' : 'Could be better...'}\n        </p>\n        <div>\n          <p>{ assertions }</p>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  assertions: state.player.assertions,\n});\n\nFeedback.propTypes = {\n  assertions: PropTypes.number,\n}.isRequired;\n\nexport default connect(mapStateToProps)(Feedback);\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;EACrCC,MAAM,GAAG;IACP,MAAM;MAAEC;IAAF,IAAiB,KAAKC,KAA5B;IACA,MAAMC,OAAO,GAAG,CAAhB;IACA,oBACE;MAAA,wBACE,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAG,eAAY,eAAf;QAAA,UACIF,UAAU,IAAIE,OAAd,GAAwB,YAAxB,GAAuC;MAD3C;QAAA;QAAA;QAAA;MAAA,QAFF,eAKE;QAAA,uBACE;UAAA,UAAKF;QAAL;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAWD;;AAfoC;;AAkBvC,MAAMG,eAAe,GAAIC,KAAD,KAAY;EAClCJ,UAAU,EAAEI,KAAK,CAACC,MAAN,CAAaL;AADS,CAAZ,CAAxB;;AAIAH,QAAQ,CAACS,SAAT,GAAqB;EACnBN,UAAU,EAAEL,SAAS,CAACY;AADH,EAEnBC,UAFF;AAIA,eAAed,OAAO,CAACS,eAAD,CAAP,CAAyBN,QAAzB,CAAf"},"metadata":{},"sourceType":"module"}